{"version":3,"file":"component---src-pages-chords-tsx-115a48fa180cb74f564e.js","mappings":"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","sources":["webpack://Music Theory Helper/./src/components/chord.tsx","webpack://Music Theory Helper/./src/pages/chords.tsx","webpack://Music Theory Helper/./node_modules/ireal-reader/Parser.js","webpack://Music Theory Helper/./node_modules/ireal-reader/index.js","webpack://Music Theory Helper/./node_modules/ireal-reader/unscramble.js"],"sourcesContent":["import {\n  Chord as ChordType,\n  fromStringToChord,\n  toStringFromChord,\n  getNextSemitone,\n  getPrevSemitone,\n} from \"./utils\";\nimport React from \"react\";\n\nimport { useState } from \"react\";\nimport { Control, NoteInput } from \"./commonStyles\";\n\nimport styled from \"@emotion/styled\";\n\nconst Warning = styled.div`\nborder-color: #668;\ncolor: red;\npadding-left: 30px;\n`;\n\nconst InputWrapper = styled.div`\n  height: 80px;\n`\n\ninterface ChordProps {\n  chord: ChordType;\n  setChord?: (a: ChordType) => void;\n}\n\n\nfunction Chord(props: ChordProps): JSX.Element {\n  if (props.setChord == null) {\n    return (\n      <h2 className=\"d-flex bd-highlight px-2\">\n        {toStringFromChord(props.chord)}\n      </h2>\n    );\n  } else {\n    const [isValid, setIsValid] = useState<boolean>(true);\n    const changeValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n      try {\n        props.setChord && props.setChord(fromStringToChord(event.target.value));\n        setIsValid(true);\n      } catch (errror) {\n        setIsValid(false);\n      }\n    };\n    return (\n      <div className=\"buttons d-flex flex-row mb-3 ml-3\">\n        <InputWrapper>\n        <NoteInput\n          type=\"text\"\n          \n          placeholder={toStringFromChord(props.chord)}\n          aria-label=\"Note\"\n          aria-describedby=\"basic-addon1\"\n          onChange={changeValue}\n        />    {\n          !isValid && <Warning>invalid chord</Warning>\n        }\n        </InputWrapper>\n        <Control\n          disabled={!isValid}\n          onClick={() =>\n            props.setChord!({\n              tonic: getPrevSemitone(props.chord.tonic, true),\n              type: props.chord.type,\n              addOns: props.chord.addOns,\n              substitution: props.chord.substitution\n            })\n          }\n        >\n          Transpose down\n        </Control>\n        <Control\n          disabled={!isValid}\n          onClick={() =>\n            props.setChord!({\n              tonic: getNextSemitone(props.chord.tonic, false),\n              type: props.chord.type,\n              addOns: props.chord.addOns,\n              substitution: props.chord.substitution\n            })\n          }\n        >\n          Transpose up\n        </Control>\n      </div>\n    );\n  }\n}\n\nexport default Chord;\n","import React from \"react\";\nimport {\n  Note as NoteType,\n  Chord as ChordType,\n  getChordNotes,\n  ChordSequence as ChordSequenceType,\n  fromStringToChord,\n  getNextSemitone,\n  getPrevSemitone,\n  fromStringToNote,\n  toStringFromNote,\n} from \"../components/utils\";\nimport { useState } from \"react\";\nimport Scale from \"../components/scale\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport Chord from \"../components/chord\";\nimport Note from \"../components/note\";\nimport { Button, Control, Card, BigInput, InputWrapper } from \"../components/commonStyles\";\n\nconst iRealReader = require(\"ireal-reader\");\n\nimport styled from \"@emotion/styled\";\n\nconst A4Paper = styled.div`\n  width: 1095px;\n  min-height: 1880px;\n  background-color: white;\n  padding: 50px 40px 10px 40px;\n  justify-items: start;\n`;\n\nconst SongTitle = styled.div`\n  font-size: xxx-large;\n  font-style: bold;\n  text-align: center;\n  color: black;\n`;\n\nconst SongKey = styled.div`\n  color: black;\n  text-align: left;\n  font-size: medium;\n`;\n\nconst BarDiv = styled.div`\n  width: 250px;\n  border-right: 1px;\n  border-left: 2px;\n  border-top: 0px;\n  border-bottom: 0px;\n  border-color: black;\n  margin-right: -1px;\n  height: 60px;\n  margin-bottom: 5px;\n  display: flex;\n  font-size: auto;\n  color: black;\n  border-style: solid;\n  flex-wrap: nowrap;\n  justify-content: stretch;\n  align-content: center;\n`;\n\nconst ChordDiv = styled.div`\n  color: black;\n  text-align: left;\n  margin-right: 6px;\n  display: flex;\n  justify-content: stretch;\n  word-wrap: nowrap;\n  flex-wrap: nowrap;\n  align-self: center;\n  flex-grow: 1;\n  flex-shrink: 1;\n  font-size: 20px;\n`;\n\nconst Warning = styled.div`\n  color: red;\n`;\n\nexport default function ChordPage(): JSX.Element {\n  const [topChord, setTopChord] = useState<ChordType>({\n    tonic: { base: \"C\", modifier: 0 },\n    type: \"MAJOR\",\n    addOns: [],\n    substitution: null,\n  });\n\n  return (\n    <Layout currentPage=\"Chords\" >\n      <SEO\n        title=\"Chords\"\n        description={\n          \"Given chord find all the notes you can play in jazz improv.\"\n        }\n        keywords={[\n          \"music\",\n          \"theory\",\n          \"chords\",\n          \"ireal\",\n          \"song\",\n          \"improvise\",\n          \"jazz improvisation\",\n          \"note generation\",\n          \"translate\",\n          \"what notes can I use\",\n          \"jazz\",\n          \"generate\",\n          \"notes\",\n          \"improv\",\n          \"jazz improvisation chord generation\",\n        ]}\n      />\n      <div>\n        <h2>Main Chord</h2>\n        <p>\n          <Chord chord={topChord} setChord={setTopChord} />\n        </p>\n      </div>\n      <div>\n        <h2>Available Notes:</h2>\n        <div>\n          <Card>\n            <div className=\"card-body\">\n              <Scale notes={getChordNotes(topChord)} />\n            </div>\n          </Card>\n        </div>\n      </div>\n      <div>\n        <h2>Full Song</h2>\n        <p>\n          <ChordSequence />\n        </p>\n      </div>\n    </Layout>\n  );\n}\n\nfunction ChordSequence(): JSX.Element {\n  const [url, setUrl] = useState<string | null>(() => {\n    var stickyValue: string | null = null;\n    if (typeof window !== \"undefined\") {\n      stickyValue = window.localStorage.getItem(\"ireal-url\");\n    }\n    if (stickyValue) {\n      return stickyValue;\n    }\n    return null;\n  });\n  const [song, setSong] = useState<ChordSequenceType | undefined>(undefined);\n  const [title, setTitle] = useState<string>(\"\");\n  const [hadError, setError] = useState<boolean>(false);\n  const [key, setKey] = useState<NoteType | undefined>(undefined);\n\n  const getSong = () => {\n    try{\n    const parseResult = iRealReader(url);\n    if (parseResult && url) {\n      if (typeof window !== \"undefined\") {\n        window.localStorage.setItem(\"ireal-url\", url);\n      }\n\n      const songResult = parseResult.songs[0];\n      const bars = songResult.music.measures as Array<Array<string>>;\n      setKey(fromStringToNote(songResult.key));\n      setSong({\n        bars: bars.map((bar) => {\n          return {\n            chords: bar.map(\n              (chordString) => fromStringToChord(chordString) ?? null\n            ),\n          };\n        }),\n      });\n      setTitle(songResult.title);\n    } \n    }catch (error) {\n      setError(true);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"d-flex flex-row\">\n        <div className=\"align-self-center mr-5\">iReal URL:{\"  \"}</div>\n\n        <InputWrapper>\n        <BigInput\n          type=\"text\"\n          className=\"lcars-form-control lcars-big-input\"\n          placeholder={url ?? \"\"}\n          aria-label=\"Note\"\n          aria-describedby=\"basic-addon1\"\n          onChange={(e) => {setUrl(e.target.value); setError(false);}}\n        />\n        {hadError && <Warning>Unsupported Song.</Warning>}\n        </InputWrapper>\n        <Button\n          className={!url ? \"c46\" : \"orange\"}\n          disabled={url === null}\n          onClick={getSong}\n        >\n          Process\n        </Button>\n      </div>\n      <div>\n        <Warning>WARNING: This feature is unstable when the song is not supported </Warning>\n        To get the right url to paste here, go to the{\" \"}\n        <a target=\"_blank\" href=\"https://www.irealb.com/forums/forumdisplay.php?3-Songs\">\n          iReal forum\n        </a>\n        , and find the song you like. Once you have found it you can right click\n        and copy the url, then you can paste it here. I have not yet implemented\n        all the functionalities of the iReal app, so some notes may be missing.\n      </div>\n      {key && (\n        <A4Paper id=\"a4-print-song\">\n          <SongTitle>{title ?? \"Unknown\"}</SongTitle>\n          <SongKey className=\"d-flex flex-row justify-content-start align-content-center\">\n            <Control\n              className={!song || !key ? \"c46\" : \"orange\"}\n              disabled={!song || !key}\n              onClick={() => {\n                setSong({\n                  bars: song!.bars.map((bar) => {\n                    return {\n                      chords: bar!.chords.map((c) => {\n                        return c ? transposeChordDown(c) : c;\n                      }),\n                    };\n                  }),\n                });\n                setKey(getPrevSemitone(key!, true));\n              }}\n            >\n              Transpose down\n            </Control>\n            <Control\n              className={!song || !key ? \"c46\" : \"orange\"}\n              disabled={!song || !key}\n              onClick={() => {\n                setSong({\n                  bars: song!.bars.map((bar) => {\n                    return {\n                      chords: bar!.chords.map((c) => {\n                        return c ? transposeChordUp(c) : c;\n                      }),\n                    };\n                  }),\n                });\n                setKey(getNextSemitone(key!, true));\n              }}\n            >\n              Transpose up\n            </Control>\n            <div>\n              {\" In the key of \"}\n              {toStringFromNote(key)}\n            </div>\n          </SongKey>\n\n          {song && <Song data={song} />}\n        </A4Paper>\n      )}\n    </div>\n  );\n}\n\nfunction Song({ data }: { data: ChordSequenceType }): JSX.Element {\n  if (data === null) {\n    return <div />;\n  }\n\n  return (\n    <div className=\"flex-wrap d-flex flex-row\">\n      {data.bars.map((a) => {\n        return (\n          <BarDiv>\n            {a.chords.map((c) => {\n              const notes = c === undefined ? undefined : getChordNotes(c);\n              if (c === undefined || notes === undefined || notes.length === 0)\n                return <ChordDiv />;\n              return (\n                <ChordDiv>\n                  {notes.map((n) => (\n                    <>\n                      <Note note={n} setNote={null} />{\" \"}\n                    </>\n                  ))}\n                </ChordDiv>\n              );\n            })}\n          </BarDiv>\n        );\n      })}\n    </div>\n  );\n}\n\nfunction transposeChordDown(chord: ChordType): ChordType {\n  return {\n    tonic: getPrevSemitone(chord.tonic, true),\n    type: chord.type,\n    addOns: chord.addOns,\n    substitution: null,\n  };\n}\n\nfunction transposeChordUp(chord: ChordType): ChordType {\n  return {\n    tonic: getNextSemitone(chord.tonic, false),\n    type: chord.type,\n    addOns: chord.addOns,\n    substitution: null\n  };\n}\n","let measures, startRepeatLocation, lastChord, endRepeatLocation, timeSignature, \nthirdEndingImminent, fineLocation, dcAlFineImminent, dcAlCodaImminent, dsAlCodaImminent,\ncodaLocation, segnoLocation;\n\nfunction resetVars() {\n  measures = [];\n  startRepeatLocation = null;\n  endRepeatLocation = null;\n  lastChord = null;\n  codaLocation = null;\n  segnoLocation = null;\n  timeSignature = null;\n  thirdEndingImminent = false;\n  dcAlCodaImminent = false;\n  dsAlCodaImminent = false;\n  fineLocation = null;\n  dcAlFineImminent = false;\n}\n\nconst rules = [\n  { token: 'XyQ', description: 'Empty space' },\n  { token: /\\*\\w/, description: 'Section marker' },\n  { token: /<(.*?)>/, description: 'Comments inside carets', operation: checkForRepeats },\n  { token: /T(\\d+)/, description: 'Time signature', operation: setTimeSignature },\n  { token: 'x', description: 'Repeat previous measure in current measure', operation: repeatLastMeasure },\n  { token: 'Kcl', description: 'Repeat previous measure and create new measure', operation: repeatLastMeasureAndAddNew },\n  { token: 'r|XyQ', description: 'Repeat previous two measures', operation: repeatLastTwoMeasures },\n  { token: /Y+/, description: 'Vertical spacers' },\n  { token: 'n', description: 'No Chord (N.C)', operation: pushNull },\n  { token: 'p', description: 'Pause slash' },\n  { token: 'U', description: 'Ending measure for player' },\n  { token: 'S', description: 'Segno', operation: setSegnoLocation },\n  { token: 'Q', description: 'Coda', operation: setCodaLocation },\n  { token: '{', description: 'Start repeat marker', operation: setStartRepeatLocation },\n  { token: '}', description: 'End repeat marker', operation: repeatEverythingToEndRepeatLocation },\n  { token: 'LZ|', description: 'Bar line', operation: createNewMeasure },\n  { token: '|', description: 'Bar line', operation: createNewMeasure },\n  { token: 'LZ', description: 'Bar line', operation: createNewMeasure },\n  { token: '[', description: 'Double bar start', operation: createNewMeasure },\n  { token: ']', description: 'Double bar end', operation: repeatRemainingEndings },\n  { token: /N(\\d)/, description: 'Numbered endings', operation: setEndRepeatLocation },\n  { token: 'Z', description: 'Final bar line', operation: repeatRemainingEndings },\n  { token: /[A-GW]{1}[\\+\\-\\^\\dhob#suadlt]*(\\/[A-G][#b]?)?/, description: 'Chord', operation: pushChordInMeasures }\n];\n\n//chord regex:\n//  letters A-G and W (W is an invisible slash chord)\n//  {1} only one of the aforementioned letters\n//  followed by zero or more of these: + - ^ h o # b digit\n//  followed by an optional group (to catch slash chords)\n//    that starts with a slash\n//    followed by A-G\n//    followed by optional # or b\n\nfunction checkForRepeats(match) {\n  if (match[1].toLowerCase() === 'd.c. al 3rd ending') {\n    thirdEndingImminent = true;\n  }\n  if (match[1].toLowerCase() === 'd.c. al fine') {\n    dcAlFineImminent = true;\n  }\n  if (match[1].toLowerCase() === 'd.c. al coda') {\n    dcAlCodaImminent = true;\n  }\n  if (match[1].toLowerCase() === 'd.s. al coda') {\n    dsAlCodaImminent = true;\n  }\n  if (match[1].toLowerCase() === 'fine') {\n    fineLocation = measures.length;\n  }\n}\n\nfunction setTimeSignature(match) {\n  timeSignature = match[1];\n}\n\nfunction pushNull() {\n  if (measures.length === 0) measures.push([]);\n  measures[measures.length - 1].push(null);\n}\n\nfunction repeatLastMeasure() {\n  measures[measures.length - 1] = measures[measures.length - 2];\n}\n\nfunction repeatLastMeasureAndAddNew() {\n  measures[measures.length] = measures[measures.length - 1];\n}\n\nfunction repeatLastTwoMeasures() {\n  measures[measures.length - 1] = measures[measures.length - 3];\n  measures[measures.length] = measures[measures.length - 2];\n}\n\nfunction setStartRepeatLocation() {\n  createNewMeasure();\n  startRepeatLocation = measures.length - 1;\n  endRepeatLocation = null;\n}\n\nfunction setEndRepeatLocation(match) {\n  //if the ending is N1, set that as the end of the repeat, because next time around we go to N2\n  const ending = parseInt(match[1]);\n  if (ending === 1) {\n    endRepeatLocation = measures.length - 1;\n  }\n}\n\nfunction setSegnoLocation() {\n  segnoLocation = measures.length - 1;\n}\n\nfunction setCodaLocation() {\n  codaLocation = measures.length;\n}\n\nfunction createNewMeasure() {\n  //unless the last measure is a blank, insert a new blank measure\n  if (measures.length === 0 || measures[measures.length - 1].length !== 0) {\n    measures.push([]);\n  }\n}\n\nfunction repeatEverythingToEndRepeatLocation() {\n  if (!endRepeatLocation) {\n    endRepeatLocation = measures.length;\n  } \n  measures.push(...measures.slice(startRepeatLocation, endRepeatLocation));\n  createNewMeasure();\n}\n\nfunction repeatRemainingEndings() {\n  if (thirdEndingImminent) {\n    repeatEverythingToEndRepeatLocation();\n    thirdEndingImminent = false; \n  }\n  if (dcAlFineImminent) {\n    measures.push(...measures.slice(0, fineLocation));\n    dcAlFineImminent = false; \n  }\n  if (dcAlCodaImminent) {\n    measures.push(...measures.slice(0, codaLocation));\n    dcAlCodaImminent = false; \n  }\n  if (dsAlCodaImminent) {\n    measures.push(...measures.slice(segnoLocation, codaLocation));\n    dsAlCodaImminent = false; \n  }\n}\n\nfunction pushChordInMeasures(match) {\n  if (measures.length === 0) measures.push([]);\n\n  let chord = match[0];\n  if (chord.startsWith('W') && lastChord) {\n    chord = chord.replace('W', lastChord)\n  } else {\n    lastChord = chord.split('/')[0];\n  }\n  measures[measures.length - 1].push(chord)\n}\n\nfunction parse(inputString) {\n  // loop through the rules until one of them applies to the beginning of the string\n  // chop off the match and parse again \n\n  for (let i = 0; i < rules.length; i++) {\n    const rule = rules[i];\n\n    if (typeof rule.token === 'string' && inputString.startsWith(rule.token)) {\n      if (rule.operation) rule.operation();\n      parse(inputString.substring(rule.token.length).trim());\n      break;\n    } else if (rule.token instanceof RegExp) {\n      const match = inputString.match(rule.token);\n      if (match && match.index === 0) {\n        if (rule.operation) rule.operation(match);\n        parse(inputString.substring(match[0].length).trim());\n        break;\n      }\n    }\n    if (i === rules.length - 1 && inputString.length > 1) {\n      // we got to the last rule and no rule applied\n      // trim off one character and parse again\n      parse(inputString.substring(1));\n    }\n  }\n}\nfunction removeEmptyMeasures(measures){\n  return measures.filter(x => x.length !== 0)\n}\n\nmodule.exports = function (raw) {\n  resetVars();\n  parse(raw);\n  return { measures: removeEmptyMeasures(measures), timeSignature, raw };\n}\n","'use strict';\n\nconst protocolRegex = /.*?irealb:\\/\\/([^\"]*)/;\nconst musicPrefix = \"1r34LbKcu7\";\nconst unscramble = require('./unscramble');\nconst parser = require('./Parser');\n\nfunction parseMusic(data) {\n  const parts = data.split(musicPrefix);\n  return parser(unscramble.ireal(parts[1]));\n}\n\nfunction makeSong(data) {\n  const parts = data.split(/=+/).filter(x => x != \"\"); //split on one or more equal signs, remove the blanks\n  let title, composer, style, key, transpose, music, compStyle, bpm, repeats = null;\n\n  if (parts.length === 7) {\n    [title, composer, style, key, music, bpm, repeats] = parts;\n  }\n  if (parts.length === 8 && parts[4].startsWith(musicPrefix)) {\n    [title, composer, style, key, music, compStyle, bpm, repeats] = parts;\n  }\n  if (parts.length === 8 && parts[5].startsWith(musicPrefix)) {\n    [title, composer, style, key, transpose, music, bpm, repeats] = parts;\n  }\n  if (parts.length === 9) {\n    [title, composer, style, key, transpose, music, compStyle, bpm, repeats] = parts;\n  }\n\n  return {\n    title,\n    composer,\n    style,\n    key,\n    transpose: transpose ? parseInt(transpose) : null,\n    music: parseMusic(music),\n    compStyle,\n    bpm: bpm ? parseInt(bpm) : null,\n    repeats: repeats ? parseInt(repeats) : null\n  }\n}\n\nmodule.exports = function (data) {\n  const percentEncoded = protocolRegex.exec(data);\n  const percentDecoded = decodeURIComponent(percentEncoded[1]);\n  const parts = percentDecoded.split(\"===\");  //songs are separated by ===\n\n  return {\n    name: (parts.length > 1) ? parts.pop() : undefined,\n    songs: parts.map(x => makeSong(x))\n  }\n};\n","'use strict';\n\n//unscrambling hints from https://github.com/ironss/accompaniser/blob/master/irealb_parser.lua\n//strings are broken up in 50 character segments. each segment undergoes character substitution addressed by obfusc50()\nexports.ireal = function(s){\n  let r = '', p;\n\n  while(s.length > 50){\n    p = s.substring(0, 50);\n    s = s.substring(50)\n    if(s.length < 2){\n      r = r + p;\n    }else{\n      r = r + obfusc50(p);\n    }\n  }\n  r = r + s;\n  return r;\n}\n\nfunction obfusc50 (s){\n  //the first 5 characters are switched with the last 5\n  let newString = s.split('');\n  for(let i = 0; i < 5; i++){\n    newString[49 - i] = s[i];\n    newString[i] = s[49 - i];\n  }\n  //characters 10-24 are also switched\n  for(let i = 10; i < 24; i++){\n    newString[49 - i] = s[i];\n    newString[i] = s[49 - i];\n  }\n  return newString.join('');\n}\n"],"names":["Warning","InputWrapper","props","setChord","___EmotionJSX","className","toStringFromChord","chord","isValid","setIsValid","useState","changeValue","event","fromStringToChord","target","value","errror","NoteInput","type","placeholder","onChange","Control","disabled","onClick","tonic","getPrevSemitone","addOns","substitution","getNextSemitone","iRealReader","require","A4Paper","name","styles","SongTitle","SongKey","BarDiv","ChordDiv","ChordPage","topChord","setTopChord","base","modifier","Layout","currentPage","SEO","title","description","keywords","Chord","Card","Scale","notes","getChordNotes","ChordSequence","url","setUrl","stickyValue","window","localStorage","getItem","song","setSong","undefined","setTitle","hadError","setError","key","setKey","BigInput","e","Button","parseResult","setItem","songResult","songs","bars","music","measures","fromStringToNote","map","bar","chords","chordString","error","href","id","c","transposeChordDown","transposeChordUp","toStringFromNote","Song","data","a","length","n","Note","note","setNote","startRepeatLocation","lastChord","endRepeatLocation","timeSignature","thirdEndingImminent","fineLocation","dcAlFineImminent","dcAlCodaImminent","dsAlCodaImminent","codaLocation","segnoLocation","rules","token","operation","match","toLowerCase","push","createNewMeasure","repeatEverythingToEndRepeatLocation","repeatRemainingEndings","parseInt","startsWith","replace","split","slice","parse","inputString","i","rule","substring","trim","RegExp","index","removeEmptyMeasures","filter","x","module","exports","raw","protocolRegex","musicPrefix","unscramble","parser","parseMusic","parts","ireal","percentEncoded","exec","decodeURIComponent","pop","composer","style","transpose","compStyle","bpm","repeats","makeSong","obfusc50","s","newString","join","p","r"],"sourceRoot":""}