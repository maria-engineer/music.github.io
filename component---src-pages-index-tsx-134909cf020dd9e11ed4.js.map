{"version":3,"file":"component---src-pages-index-tsx-134909cf020dd9e11ed4.js","mappings":"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","sources":["webpack://Music Theory Helper/./src/pages/index.tsx"],"sourcesContent":["import type { HeadFC, PageProps } from \"gatsby\";\nimport React from \"react\";\nimport {\n  Note as NoteType,\n  getScale,\n  getRelativeMajor,\n  getRelativeMinor,\n} from \"../components/utils\";\nimport { useState } from \"react\";\nimport Scale from \"../components/scale\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport Note from \"../components/note\";\nimport { RelativeControl, Card } from \"../components/commonStyles\";import styled from \"@emotion/styled\";\n\nconst Big = styled.div`\n  font-size: x-large;\n`;\n\nconst IndexPage: React.FC<PageProps> = () => {\n  const [topNote, setTopNote] = useState<NoteType>({ base: \"C\", modifier: 0 });\n  const relativeMinor = getRelativeMinor(topNote);\n  const relativeMajor = getRelativeMajor(topNote);\n  return (\n    <Layout currentPage=\"Scales\" >\n      <SEO\n        title=\"Scales\"\n        description={\"Generate the scales for a note, and the relative scales\"}\n        keywords={[\n          \"music\",\n          \"theory\",\n          \"scales\",\n          \"generate\",\n          \"relative\",\n          \"minor\",\n          \"major\",\n          \"notes\",\n          \"dominant\",\n        ]}\n      />\n      <div className=\"d-flex flex-wrap\">\n        <div className=\"pr-2\">\n          <h2>Main Note</h2>\n          <p>\n            <Note note={topNote} setNote={setTopNote} />\n          </p>\n        </div>\n        <div className=\"align-self-end\">\n          <p>\n            <div className=\"buttons\">\n              <RelativeControl\n                onClick={() => setTopNote(relativeMinor)}\n\n                aria-label=\"Click for Relative Minor\"\n              >\n                <div className=\"d-flex flex-column mb-2\">\n                  <div>Relative Minor:</div>\n                  <Big><Note note={relativeMinor} setNote={null} /></Big>\n                </div>\n              </RelativeControl>\n            </div>\n          </p>\n        </div>\n        <div className=\"align-self-end\">\n          <p>\n            <div >\n              <RelativeControl\n                onClick={() => setTopNote(relativeMajor)}\n                aria-label=\"Click for Relative Major\"\n              >\n                {\" \"}\n                <div className=\"d-flex flex-column mb-2\">\n                  <div>Relative Major: </div>\n                  <Big><Note note={relativeMajor} setNote={null} /></Big>\n                </div>\n              </RelativeControl>\n            </div>\n          </p>\n        </div>\n      </div>\n      <div>\n        <h2>Major Scale</h2>\n        <p>\n          <Card>\n            <div className=\"card-body\">\n              <Scale notes={getScale(topNote, \"MAJOR\")} />\n            </div>\n          </Card>\n        </p>\n      </div>\n      <div>\n        <h2>Natural Minor Scale</h2>\n        <p>\n          <Card>\n            <div className=\"card-body\">\n              <Scale notes={getScale(topNote, \"NATURAL\")} />\n            </div>\n          </Card>\n        </p>\n      </div>\n\n      <div>\n        <h2> Harmonic Minor Scale </h2>\n        <p>\n          <Card>\n            <div className=\"card-body\">\n              <Scale notes={getScale(topNote, \"HARMONIC\")} />\n            </div>\n          </Card>\n        </p>\n      </div>\n      <div>\n        <h2> Chromatic Scale </h2>\n        <p>\n          <Card>\n            <div className=\"card-body\">\n              <Scale notes={getScale(topNote, \"CHROMATIC\")} />\n            </div>\n          </Card>\n        </p>\n      </div>\n      <div>\n        <h2> Diminished Scale </h2>\n        <p>\n          <Card>\n            <div className=\"card-body\">\n              <Scale notes={getScale(topNote, \"DIMINISHED\")} />\n            </div>\n          </Card>\n        </p>\n      </div>\n      <div>\n        <h2> Altered Scale </h2>\n        <p>\n          <Card>\n            <div className=\"card-body\">\n              <Scale notes={getScale(topNote, \"ALTERED\")} />\n            </div>\n          </Card>\n        </p>\n      </div>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <title>Music</title>;\n"],"names":["Big","target","name","styles","topNote","setTopNote","useState","base","modifier","relativeMinor","getRelativeMinor","relativeMajor","getRelativeMajor","___EmotionJSX","Layout","currentPage","SEO","title","description","keywords","className","Note","note","setNote","RelativeControl","onClick","Card","Scale","notes","getScale","Head"],"sourceRoot":""}